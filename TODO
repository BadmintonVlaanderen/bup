Ansagenänderung bei 60 Sekunden! (11-.. bitte spielen)
mail Klaus-Michael + Jörg
	now measured
	irreproducible (stats show <20ms)
	selectable
add support for static downloadable files
	bundesliga-mindestanforderungen
	bundesliga-ballsorten
xlsx eventsheet singles: player name is 0
alles vorhanden im Spielbericht ankreuzen
option to react on touch instead of click
final match confirmation should set umpire name/court id
btde export should export all known matches!
sent export should be able to imported
xlsx style at center
referee mode

display for very small screens (see error report)
hide current matches from match overview if not enough space
wakelock
	functional (seems currently broken)
	test on device
	wakelock craft video

doc about all main features (HTML table, compare with other projects
fix autorescale on tablets
Anforderungsliste BuLi!
standard annotation for league_key and the like
	make sure that existing keys stay unchanged
	warn if redundant keys
Bundesliga xlsx scoresheets
	vertical-texts with shape instead
	diagonal line for game-end circles
courts for edemo / vdemo
retest edemo / vdemo with different locales

editmode: input values from last match carry over, should not
disqualified in english scoresheet!
interactive error handler => ask for an email

RLS

bup display mode
	double court mode (digits outside)
	normal mode w/ digits outside
	add court outline display mode
	upon changing mode or court show name and court at top for 10s
	left/right keys to change display type
	up/down keys to change court
	test all with incomplete matchups!
	use state.event upon switching from settings (don't start with loading then)
	add court info to vdemo/edemo
	update court info with vdemo/edemo
	implement courts with liveaw
	switch to svg display for list
	hide settings after timeout (10s?)
	show last update in settings
	support display mode without network

Content-security-policy
test offline (all features present with all demos?)
	broken atm?
do not require a court for staticnet (test by changing languages)
support for lower NRW leagues (KL-S1-194)

shift+A breaks demo mode!?
CourtSpot: support order
*demo: support order
liveaw: support order

v/edemo11
v/edemo: set court nr
court selector in demo mode

xlsx scoresheet: add angled line (and improve text positioning)

mail Ulf


liveaw: HTTP mode
liveaw: improve/test reconnecting
liveaw: proper reconnect backoff

MVP liveaw
	allow hiding events from public
	implement errstate
	implement timeout
	implement netstats gathering as well (re-add component)
	implement authorization (including login via bup)

mail Werner
mail Markus
mail Daniel / Peter

eventsheet: more space for input, vary by field
N10 sensitivity! ontouch instead of onclick
scoresheet: Fit "TSV Neuhausen-Nymphenburg 1"
network loading should not move around design
option to call home upon event completion
do not line-break player / team names in announcements
multi scoresheet: shift+S shows outdated state when editing match
highlight current match button
move login rendering into a helper function into network
Opera Mini bug
support RLS (Excel file)
test editevent without all_players
Leere Mannschaftszettel interaktiv generieren (anwesend)
"bitte spielen" after timer expires at 11
"court 1, 20 seconds"  after timer expires at 11 / new game
ready to play

eventsheet svg for only home/only away (incl. PDF generations for each)
test eventsheet on various mobiles
liveaw: prevent csrf from other domains
event stats

reason of injury
reason of retired
	automatic if as a result or after injury
reason of yellow card/red card/disqualification
	delay,throwing racket,verbal abuse,

order should actually change order on state.event with staticnet
	how to store current order then?
	test happens if order changed on one device, and dialog open on other
	change in CourtSpot too


CourtSpot: support all_players
add tests for note positioning
optimize clicking on links (just show/display once)
	avoid load_by_hash when just clicking
	make sure to only change hash once when navigating
	avoid showing stuff in hide functions
	maybe use history API instead of hash?

mail Ulf
mail Jörg Hupertz

referee mode
	p2p crypto handshake

redesign order as manual
	more effective rendering (prepare for animation)
	animation
	drag&drop
	use slightly different reds for each player
liveaw: fall back to plain HTTP

mail Michael Pütz
mail btde
mail Manuel
mail Werner
post bc

improve liveaw
	player ids
	Rangliste
	colors for team

BTP support -> Moritz (DMO35)
order: reload button
order: store match order in bup / CourtSpot
order: do not show link if no matches present (not yet connected etc.)
fix load_ui_by_hash (returns too early)

referee mode where we see both courts
	... and a list of the last 10 presses each
	first with CourtSpot, later with P2P
test going from netstats to order to multi-sheets to game etc. (all via hash, shared functionality for showing/hiding)
liveaw event demo
position manual notes after circle if space is sufficient
enable compression for presses_json
clicking on current match when match is in progress shouldn't do anything
safari: icon for front page
safari: set a better bookmark name
unify cache
liveaw: reason about csrf_token - can we make sure to have the cookie last for quite some time?
simple P2P
	list connected nodes in settings
	test for connected nodes
	send current battery level (if known)
	send network stats

	fix connection / answer
	test between 3 nodes with candidates&offer
	check if websocket connected, then send current event registration + ice candidates
	on event change register for event ID
	actually transfer data
	handle P2P in browsers that don't support it!
	autodetect event from LAN
	push settings
network: do not reconstruct network buttons if nothing changed
include compressed presses in error report
make error msg a form submission
	fall back to email?
fix with samsung browser
	top buttons are all over the place
check battery? (send via P2P)
button sizes on Mac OSX Chrome
do not recreate network buttons, update them instead
show UI when reporting errors (top right, allow email address entering)

extend displaymode (new views)
import: hide login upon switching to staticnet?
import: test from non-network
import: test importing match-only stuff (should not active staticnet)
&print for scoresheet / event scoresheet / eventsheet
event scoresheet should show current state if known (associate mstate, survive event reloads)
court selection by clicking on court name (if restricted courts, otherwise other court selection)
move pronounciation above love-all? / highlight love-all?
option so that love-all should cancel timer
click on match button should go to match if it is currently running (associate events with presses locally)
profile event scoresheet rendering
highlight or hide middle center buttons
match statistics: UI on mobile
"no stored matches" is not shown after last match is removed!
automatically delete old matches after 1 day|*week|month
"Loading bup" message -> preconfigure HTML
event scoresheets -> back goes through multiple hashes (trace hash changes)
write a manual (A5)
service worker
	collect file names to cache
	cache file names
	when fetching, use cache
	add polyfill https://github.com/coonsta/cache-polyfill ?
	test cache in practice (shut down server)
	disable worker in dev

Installable on Android
	create app icon
	render app icon to pngs
	create manifest
	https://developers.google.com/web/updates/2015/03/increasing-engagement-with-app-install-banners-in-chrome-for-android?hl=en
	test that it doesn't break when not TLS

improve P2P
	test with deliberately incorrect messages (no valid JSON etc.)
	handle node gonce once we connect
	clear up node info for nodes whose connections did not work out
	install error handling functions
	btde: set state.event.id
	reconnect when changing network
	handle WebSocket stop
	automatically get the current event from IP
	encrypt (retrieve signature from event host)
	write test cases
	ObjectRTC
import single matches

replay?
btde: Partial matches
liveaw 2.0 (RL Manuel + Benedikt)
	import
custom lint: look for [ \t]\n in source files

check whether we have a copy of a network game to resume from, offer it
	offer both network and local version if they differ

save manually created games immediately?

clean up / hide automatically generated games?
	after certain time?

alternate match opening
	CG generated toss
	icon for toss
network: notify if clicked game is locally present (hide network if score is identically there)


manually create an event (staticnet)
document network error cases
animation in hide_settings (go to top-right icon)

re-style settings with columns
only show 4 games to resume

move shuttle counter away from shuttle counter button in landscape mode
better design for settings on mobiles
CONTRIBUTING (-> assign copyright form)

write UX documentation

disqualification at game start
	write test
	test
test various network errors

test touch interface
test touch latency
prevent double touches

formalize backup_players event entry (in edemo/vdemo, later in liveaw)
injury timer
	in scoresheet (if not disqualified / retired afterwards)
show what was undone
support for team flags
support for player portraits
allow changing player names during game (warn if discipline is changed)
strange counting (new suggestions in Bundesliga, 5x11 etc.)
make everything buttons keyboard-usable; shortcuts etc.
show undo text hint during start
larger hitbox for buttons
store time of changes; analyze how long each point took
animate changing server sides and changing sides after game
improve error showing
improve load match style
switch core implementation to a single mode, one of ['pick_server', 'pick_receiver', 'love-all', 'score', 'postgame-confirm', 'postmatch-confirm']
btde: Enter player names upon start if some are missing (if incomplete)
	only accept those inputs
	raise error (and test it) that only those are accepted
test e and s shortcuts together
test red card at beginning and after end of game/match
make every button keyboard usable
	1-4 for dialogs of players
	keys for warnings etc. (after pressing e)
	undo/redo (Ctrl+Z/Y)
up/down keys to switch between options; left-right for punishments
display mode (tap anywhere to exit)
	replay game in slow motion / real time (in display mode)
support multiple networks at the same time
use court name in 20s announcements
shortcuts u/r undo/redo
title for all buttons
make buttons larger in landscape on smartphones
scoresheet: begin and end on different days
display mode for multiple courts (via WebRTC, requires a network)
WebRTC bootstrapping without Internet (QR code? UDP multicast?)
add test for retired-then-referee
icons for scoresheet (PDF/print/back) buttons
test for shuttle counter
detect if already in F11 fullscreen before showing fullscreen dialog
&fs in hash to override fullscreen setting
If long pronounciation ends with short one, short pronounciation in larger font-size
test that cards lead to an exceptions entry in match
remove #pick_side in favor of _ui_make_team_pick
test correction in scoresheet at very beginning of set
move scoresheet press handling after state_calc (and use servers of game)
undo without redo back to start should reset begin in umpire scoresheet
loading bup.. teaser in HTML for very slow connections
network: color/opacity in match list by state
Schiedsrichterzettel auch im Bundesliga-Design
move scoresheet SVG into separate file
mock courtspot and write automated tests
dynamically create favicon (score? match name? court name?)
replace s.scoresheet_game with sg to save space
move _network_reload_interval to network
small color animation when any value (score / shuttle count) changes
rename default-invisible to invisible and remove/add CSS class instead of show/hide/toggle
support events
	offline event creation
	download current day events from live.aw (to pre-fill league / teams / players)
	synchronize in local network
gzip icons in dist with correct htaccess to save CPU compression power?
badmintonticker.de mock / testing
CSS animation for settings (go to top right)
investigate high GPU usage (transparency?)
editing score (this / previous game) after retiring / disqualification
test black card before game start
restart network resync interval if network settings change
manual editing in portrait (maybe distinguish by aspect ratio?)
improve settings display on smartphone
investigate performance of timers
test svg_path_lines
test for english chars on scoresheet
move editmode_active into state.ui
Button "bitte spielen" mehr betonen (icon?)
test that singles with pick_receiver works just fine
minify HTML
test failure of eventsheet download
implement service workers as well as appcache
CSS: check that we combine media rules in practice with cleancss
convert static (in HTML) pickers to team_pick / player_pick etc.
better loading screen
move manual editing confirm button to bottom (with white border) and give it a text "Übernehmen"
click court name to get into change court dialog (show button in editmode)
scoresheet: show loading dialog
scoresheet: deal and notify failures of loading SVG
unify scoresheet and eventsheet downloading
display mode: until match start show preview (Refrath gegen ...)
make reload button a normal button
test badminton umpire scorekeeper? / support its web interface?
add option no court; prevent transferring (big fat message though!)
remove all references of state in favor of passing in state
	simply remove state from lint
test red card after disqualification
consider reason for injury / retired
compress presses in sending
check for all disabled settings and use utils.disabled_qsa
show part of scoresheet below? [optionally]
check for instances of {replace} when calling s._
netstats: use Resource Timing API to distinguish server time and network time
compile i18n keys into an array (save mapping in JSON)
alternative toss: ask what happened
send export: show status / finished
replace document.querySelector with utils.qs
export: include timestamp/date of export
import: restrict file types
import: gracefully handle invalid input files, put out a warning
rename teamtext_internal to teamtext
stats: + most consecutive points
stats: + game points
stats: + match points
switch network.ui_list_event for network.subscribe
remove all mentions of home/away
anroid chrome address bar background color
remove one of network.calc_gamescore and calc.calc_game_score?
improve yellow-card.svg / red-card.svg
replace state.match.max_games by a function
helper function for document.querySelector which asserts result is true (and omits silent error otherwise)
	use that in various util functions as well
allow challenges
	failsafe (http://www.badmintoncentral.com/forums/showthread.php/160170-sub-standard-umpire-gave-a-free-point-to-Okuhara-in-first-set?p=2413636#post2413636)
CourtSpot: Spielreihenfolge festlegen
remove s.match.max_games in favor of a calc function
remove !important
add a test that all public functions are in use
write a test to find undocumented (div/data_structures.md) keys
move eventsheet._xlsx into separate module
reduce common occurences of a single string with dots in it (automatically?) Example: uiu.create_el
-> Demo Jörg H, Manuel, Susanne, Werner Durow

Blocked
=====

btde: league_key from btde JSON => what's the value for 2BLN/2BLS?
Jörg Hupert: BWF change 90 seconds warmups
