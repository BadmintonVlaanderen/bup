displaymode/2court
	show score
	show gamescore
	show match (in between)
	highlight winner / server
	show remaining pause time
Anzeige André: Sätze links, black-white
display Moritz: prior games in detail between names
vertical list of all matches on current courts (tournament-overview)
double courts display: left score | disciplines | right score
displaymode: modify colors

fix courtspot caching on android!?
refmode: disable/enable pronouncing and other settings remotely

remove saving hall and other extra_data
make court smaller -> Stefan Weiss

highlight undo in stats

block middle buttons like any other-> Jörg Hupertz
cursor in fullscreen display should be none if settings are not visible (Chrome / Mac OS)
error teamtext_internal bei Tablet wenn referee mode spiel auf incomplete ändert
displaymode.option_applies for colors
prevent going into incomplete match (update first, retry, if not then error)
initialize from turnier.de?
initialize ticker from turnier.de?
refmode: show netstats

test button on umpire panels to test all connected displays for 10 seconds
find out why btde not updating tablets (appcache)
refmode: option to add a log of incoming messages
consider team colors?
match info (from Referee) mode for Darius
demo international fails
autosize international
A88X: reduce card dialog size
A88X: make court more readable

remove court_description
displaymode: configure colors locally
courtspot: fix network_team1_serving (it's bananas at match start)
courtspot: editevent fails because it does not request all_players
btsh: display one court
btsh: display all courts

korean-open like display
scoresheet: support match_num
scoresheet: support scheduled_time

refmode: update UI better
refmode push!

test with refmode that listed_players is being saved
make court descriptions configurable
displaymode/onecourt: score larger!
displaymode: only points, way larger (left / right)
displaymode: 2 monitor mode -> Markus
displaymode: invert colors (Rheinhart@BVM)

displaymode: only show options when applicable
	(call option_applies in UI as well, not only in displaymode)
override display to show a court as blank (Dario)
displaymode: option to vacate a court
	set via settings
	set (via refmode)
"20 Sekunden" im Ansagefeld nicht sichtbar wenn Auf- und Rückschläger bestimmt werden -> Jörg Hupertz
	noch "20 Sekunden" neben der Uhr
almost changed running match: ask again when changing if match is in progress!!!
adopt event: show difference
adopt event: recalc upon event change
Aufstellungen crashes in referee mode
refmode: adopt: do not delete presses if match id stays the same
Uncaught TypeError: Cannot read property 'name' of undefined
    at press_state_desc (http://localhost/bup/js/restats.js:664:65)
    at Object.render_presses (http://localhost/bup/js/stats.js:739:12)
    at http://localhost/bup/js/refmode_referee_ui.js:545:11
    at Array.forEach (native)
    at render_event (http://localhost/bup/js/refmode_referee_ui.js:511:11)
    at update_match (http://localhost/bup/js/refmode_referee.js:126:2)
    at handle_dmsg (http://localhost/bup/js/refmode_referee.js:203:3)
    at handle_msg (http://localhost/bup/js/refmode_referee.js:313:3)
    at WebSocket.handle_msg_json (http://localhost/bup/js/refmode_conn.js:50:2)


demo: add event
test players_present with btde should be correctly adopted by referee
displaymode: double display
idea: mirror referee
refmode:
	rerender UI
	disable timeouts
	client should get notified by updates
	test that server gets notified by updates
	fails if client was in no net previously
refmode: start a new match from JSON
refmode push: make sure to prevent loops

make lint work on macOS

Android app
SFTP (for BVM)

Anzeige: Sätze
handle und test old Android browsers
go through all TVR reports and test that it works now

refmode: report network errors
refmode: request&download export
refmode: synchronize notes, location, etc.
refmode: synchronize present_players / backup_players even if not supported by btde
refmode: alert on network failures
refmode: show netstats
refmode: extend test by a lot
websocket conn tried to send message while no websocket active: should not happen more than once
Liste aller Spieler + Schiedsrichter für Hallensprecher (inkl. Reihenfolge)


Safari: Spielbericht fails
Safari referee: show red warning
Safari: private browsing mode incurs more error messages

more displays
	2 displays per courtE
make colors configurable
ads!
-> Markus Schwendtner

demo: make display work

20s delay clock (BC)

BTS support

gelbe karte dauert lange zum Laden auf iPad?
setupsheet
	highlight column header on mouseover (remove CSS-based approach)
	browser back fails!
	check singles ranking
	check doubles ranking
	check for too many foreigners
	check on editevent as well
	sort by ranking if present, name otherwise
	consider adding as soon as selection
	XLSX
	editevent: show nationality if non-EU

editevent: allow changing fields (umpire, notes, etc.)
editevent: allow selecting event (when supported by ticker)
editevent: allow selecting event (when no ticker: load from JSON)

import without all_players => load_all_players
editevent: recalc incomplete when setting to N.N.
editevent: show nat
refmode: show errors (b.phihag.de)
TODO losing focus too often
	incremental updates
refmode client:
	reflist should update automatically
referee mode: back function

omit error network could not be connected in displaymode
font size of score should be larger in single-court display

Spielbericht: Ersatzspieler etc.
BuLi-Spielbericht als PDF / direkt ausdrucken (-> Janine)
clicking on match should go to match if match is the current one, don't reload from server
auto go fullscreen with any click when set that way

improve jticker
	remove additional zeroes (-> Martin/Beuel)
	auto-switch after download
	login with token
	login with user/pass
	delete old bup versions
	edit teams? (all_players...)

improve refmode
	show ping + last_update
	refmode: improve instructions (screenshot with tablet border)
	don't send entire state on settings changes
	increase keepalive? Measure
	export client info(including netstats) from refmode as well
	inject presses @remote! (precedence: WDM in Refrath)
	refmode: save&render order
	switch to event *from* remote
	update stats / Srzettel / match live (in event)
	only re-render changed clients
	only rerender changed matches
	order should be reflected in display
	import event
	more efficient protocol for differential changes
	more efficient updating on referee
		calc state of matches and just update that when necessary
	test with multiple referees
	document direct protocol
	show error in UI
	send export to referee (add request_id map)
	subscribe
		event state (i.e. players being filled in / changed)
	configure fullscreen
	push match state of other matches to client if match not present (i.e. btde)
	live push state for display
	record failures (closing on error) and successful connections
	transmit and show last error with timestamp
	transmit and show network status with timestamp
	show netstats
	show other settings

	install pseudeo network refmode_referee
	push event to client (live changes for displaymode, make sure no loop)
	change setting  announcements visible/not visible
	init scripts for hub (including installation script)
	client: auto-update referee list
	update referee list when referee disconnects
	show disconnected clients
	show current client state (i.e. enter the match etc.) in a small view?
	show last 5 presses
	more efficient rendering (client.updated)
	test that battery stays current
	show current network state
	test two clients at the same match
	re-render clients+event upon language change
	message to SRs
	request shuttles
	refmode: autosave (and offer to restore)

improve display mode
	like den-ger
	show team colors (blue-white refrath etc., as a square, maybe with two triangles)
	test that settings change has immediate effect (UI)
	large numbers display mode (larger than now, maybe two courts, game count)
	add lock functionality
	berlin-like display (names top/bottom, very large numbers for one court)
	recheck that caching still works with annotate
	add btde emulation
	bg colors single-court display (https://image.jimcdn.com/app/cms/image/transf/dimension=640x1024:format=jpg/path/sb05689bf882eaf25/image/ia1b1bbe374005542/version/1473663902/image.jpg seems very good)
	double court mode (digits outside)
	normal mode w/ digits outside
	add court outline display mode
	refrath-gegen integration (count down to match start)
	upon changing mode or court show name and court at top for 10s
	left/right keys to change display type
	up/down keys to change court
	test all with incomplete matchups!
	use state.event upon switching from settings (don't start with loading then)
	add court info to vdemo/edemo
	update court info with vdemo/edemo
	implement courts with liveaw
	switch to svg display for list
	hide settings after timeout (10s?)
	show last update in settings
	support display mode without network
	show games on the side that won them?
	net status flickering when hub is away

make an android app
	badmintonticker

Notiz an Spielernamen (-> Werner Durow)

stats: add rally length
stats: list top 10 longest rallies (for video)

android home screen icon
run lighthouse

yellow/red/black card/unterbrechung: document time (in fourth row)
	add test (with / without referee)
	implement
	thank Günter Wagner


liveaw: improve/test reconnecting
liveaw: proper reconnect backoff
MVP liveaw
	allow hiding events from public
	implement errstate
	implement timeout
	implement netstats gathering as well (re-add component)
	implement authorization (including login via bup)

display
	invert colors
	small court rendering of all courts
	only list
update RLN document

courtspot
	remove team_names
	change event
if @dev: warn if event_name is redundant
	update import/export

Aufstellungszettel mit all_names (checkboxes)
	helper method update_event
		keep all_players if present in old and id == old_id and not present in new
	test with demo
	fetch from btde

pick referee court if starting with displaymode

BVM-Support
	Upload via SFTP

publish to turnier.de
	-> Janine
publish to NuLiga

bldemo: Active match should be on court 1
bldemo: without started matches (bldemo_inprogress?)
ask again if resetting to 0-0 (btde)

test key_utils.gen / sign / verify
order:
	on change transmit to demo
	on change transmit to courtspot

invented current match upon switching modes
BuLi checkliste: redesign
	=> mails Jörg Hupertz
Cornelia Schröder: redesign display to select server / receiver
alternate editevent (with checkboxes, same order as Mannschaftsaufstellungszettel)

btde: fetch all_players
empty list of players in hall (select + input)

editevent: check ranking (red error message)
bupbug: correct exports with really long lines
automatically send export if state finishes from event incomplete -> event complete
	different mail subject (auto-export)
	don't try without inet connection
	wait for internet connection
	test that this fails gracefully if no inet connection
UTF-8 replacement char in Ulf's exports
courtspot reihenfolge
export graphic for facebook post
Verlauf SR-Zettel (oder presses) => Bernd-Christian Hölscher
alternative toss
	who won?
	offer toss
send export: error message / success
Spielbericht: Leitender Schiedsrichter auswählen?
order: show time remaining for players with rest according to regulations

add demo mode to UI (also a way to disable)
implement resource timing API
rendering error in editmode/Edge
suppress sending duplicate silent_errors

display for very small screens (see error report)
hide current matches from match overview if not enough space
wakelock
	un-hide
	functional (seems currently broken)
	test on device
	wakelock craft video

fix autorescale on tablets
Bundesliga xlsx scoresheets
	vertical-texts with shape instead
	diagonal line for game-end circles

editmode: input values from last match carry over, should not
interactive error handler => ask for an email
contemplate adding various PDFs to appcache
RLS
export: generate v2 data

xlsx: Reihenfolge optimieren
Content-security-policy
test offline (all features present with all demos?)
	broken atm?
do not require a court for staticnet (test by changing languages)

shift+A breaks demo mode!?
CourtSpot: support order
*demo: support order

v/edemo11
v/edemo: set court nr
court selector in demo mode

xlsx scoresheet: add angled line (and improve text positioning)

editevent: check if ok by VRLs

eventsheet: do not show external links when no internet access
eventsheet: more space for input, vary by field
scoresheet: Fit "TSV Neuhausen-Nymphenburg 1"
network loading should not move around design
option to call home upon event completion
do not line-break player / team names in announcements
multi scoresheet: shift+S shows outdated state when editing match
highlight current match button
move login rendering into a helper function into network
Opera Mini bug
support RLS (Excel file)
test editevent without all_players
Leere Mannschaftszettel interaktiv generieren (anwesend)

eventsheet svg for only home/only away (incl. PDF generations for each)
test eventsheet on various mobiles
liveaw: prevent csrf from other domains
event stats

reason of injury
reason of retired
	automatic if as a result or after injury
reason of yellow card/red card/disqualification
	delay,throwing racket,verbal abuse,

order should actually change order on state.event with staticnet
	how to store current order then?
	test happens if order changed on one device, and dialog open on other
	change in CourtSpot too


add tests for note positioning
optimize clicking on links (just show/display once)
	avoid load_by_hash when just clicking
	make sure to only change hash once when navigating
	avoid showing stuff in hide functions
	maybe use history API instead of hash?

referee mode
	p2p crypto handshake

redesign order as manual
	more effective rendering (prepare for animation)
	animation
	drag&drop
	use slightly different reds for each player
liveaw: fall back to plain HTTP

improve liveaw
	player ids
	Rangliste
	colors for team

BTP support -> Moritz (DMO35)
order: reload button
order: store match order in bup / CourtSpot
order: do not show link if no matches present (not yet connected etc.)
fix load_ui_by_hash (returns too early)

referee mode where we see both courts
	... and a list of the last 10 presses each
	first with CourtSpot, later with P2P
test going from netstats to order to multi-sheets to game etc. (all via hash, shared functionality for showing/hiding)
liveaw event demo
position manual notes after circle if space is sufficient
enable compression for presses_json
clicking on current match when match is in progress shouldn't do anything
safari: icon for front page
safari: set a better bookmark name
unify cache
liveaw: reason about csrf_token - can we make sure to have the cookie last for quite some time?
simple P2P
	list connected nodes in settings
	test for connected nodes
	send current battery level (if known)
	send network stats

	fix connection / answer
	test between 3 nodes with candidates&offer
	check if websocket connected, then send current event registration + ice candidates
	on event change register for event ID
	actually transfer data
	handle P2P in browsers that don't support it!
	autodetect event from LAN
	push settings
network: do not reconstruct network buttons if nothing changed
include compressed presses in error report
make error msg a form submission
	fall back to email?
fix with samsung browser
	top buttons are all over the place
button sizes on Mac OSX Chrome
do not recreate network buttons, update them instead
show UI when reporting errors (top right, allow email address entering)

import: hide login upon switching to staticnet?
import: test from non-network
import: test importing match-only stuff (should not active staticnet)
&print for scoresheet / event scoresheet / eventsheet
event scoresheet should show current state if known (associate mstate, survive event reloads)
court selection by clicking on court name (if restricted courts, otherwise other court selection)
move pronounciation above love-all? / highlight love-all?
option so that love-all should cancel timer
click on match button should go to match if it is currently running (associate events with presses locally)
profile event scoresheet rendering
highlight or hide middle center buttons
match statistics: UI on mobile
"no stored matches" is not shown after last match is removed!
automatically delete old matches after 1 day|*week|month
"Loading bup" message -> preconfigure HTML
event scoresheets -> back goes through multiple hashes (trace hash changes)
write a manual (A5)
service worker
	collect file names to cache
	cache file names
	when fetching, use cache
	add polyfill https://github.com/coonsta/cache-polyfill ?
	test cache in practice (shut down server)
	disable worker in dev

Installable on Android
	create app icon
	render app icon to pngs
	create manifest
	https://developers.google.com/web/updates/2015/03/increasing-engagement-with-app-install-banners-in-chrome-for-android?hl=en
	test that it doesn't break when not TLS

improve P2P
	test with deliberately incorrect messages (no valid JSON etc.)
	handle node gonce once we connect
	clear up node info for nodes whose connections did not work out
	install error handling functions
	btde: set state.event.id
	reconnect when changing network
	handle WebSocket stop
	automatically get the current event from IP
	encrypt (retrieve signature from event host)
	write test cases
	ObjectRTC
import single matches

replay?
btde: Partial matches
liveaw 2.0 (RL Manuel + Benedikt)
	import
custom lint: look for [ \t]\n in source files

check whether we have a copy of a network game to resume from, offer it
	offer both network and local version if they differ

save manually created games immediately?

clean up / hide automatically generated games?
	after certain time?

alternate match opening
	CG generated toss
	icon for toss
network: notify if clicked game is locally present (hide network if score is identically there)


manually create an event (staticnet)
document network error cases
animation in hide_settings (go to top-right icon)

re-style settings with columns
only show 4 games to resume

move shuttle counter away from shuttle counter button in landscape mode
better design for settings on mobiles
CONTRIBUTING (-> assign copyright form)

write UX documentation

disqualification at game start
	write test
	test
test various network errors

autogenerate summary text if card was handed in any match
show what was undone
support for team flags
support for player portraits
allow changing player names during game (warn if discipline is changed)
strange counting (new suggestions in Bundesliga, 5x11 etc.)
make everything buttons keyboard-usable; shortcuts etc.
show undo text hint during start
larger hitbox for buttons
store time of changes; analyze how long each point took
animate changing server sides and changing sides after game
improve error showing
improve load match style
switch core implementation to a single mode, one of ['pick_server', 'pick_receiver', 'love-all', 'score', 'postgame-confirm', 'postmatch-confirm']
btde: Enter player names upon start if some are missing (if incomplete)
	only accept those inputs
	raise error (and test it) that only those are accepted
test e and s shortcuts together
test red card at beginning and after end of game/match
make every button keyboard usable
	1-4 for dialogs of players
	keys for warnings etc. (after pressing e)
	undo/redo (Ctrl+Z/Y)
up/down keys to switch between options; left-right for punishments
display mode (tap anywhere to exit)
	replay game in slow motion / real time (in display mode)
support multiple networks at the same time
use court name in 20s announcements
shortcuts u/r undo/redo
title for all buttons
make buttons larger in landscape on smartphones
scoresheet: begin and end on different days
display mode for multiple courts (via WebRTC, requires a network)
WebRTC bootstrapping without Internet (QR code? UDP multicast?)
add test for retired-then-referee
icons for scoresheet (PDF/print/back) buttons
test for shuttle counter
detect if already in F11 fullscreen before showing fullscreen dialog
&fs in hash to override fullscreen setting
If long pronounciation ends with short one, short pronounciation in larger font-size
test that cards lead to an exceptions entry in match
remove #pick_side in favor of _ui_make_team_pick
test correction in scoresheet at very beginning of set
move scoresheet press handling after state_calc (and use servers of game)
undo without redo back to start should reset begin in umpire scoresheet
loading bup.. teaser in HTML for very slow connections
network: color/opacity in match list by state
Schiedsrichterzettel auch im Bundesliga-Design
move scoresheet SVG into separate file
mock courtspot and write automated tests
dynamically create favicon (score? match name? court name?)
replace s.scoresheet_game with sg to save space
move _network_reload_interval to network
small color animation when any value (score / shuttle count) changes
rename default-invisible to invisible and remove/add CSS class instead of show/hide/toggle
support events
	offline event creation
	download current day events from live.aw (to pre-fill league / teams / players)
	synchronize in local network
gzip icons in dist with correct htaccess to save CPU compression power?
badmintonticker.de mock / testing
CSS animation for settings (go to top right)
investigate high GPU usage (transparency?)
editing score (this / previous game) after retiring / disqualification
test black card before game start
restart network resync interval if network settings change
manual editing in portrait (maybe distinguish by aspect ratio?)
improve settings display on smartphone
investigate performance of timers
test svg_path_lines
test for english chars on scoresheet
move editmode_active into state.ui
Button "bitte spielen" mehr betonen (icon?)
test that singles with pick_receiver works just fine
minify HTML
test failure of eventsheet download
implement service workers as well as appcache
CSS: check that we combine media rules in practice with cleancss
convert static (in HTML) pickers to team_pick / player_pick etc.
better loading screen
move manual editing confirm button to bottom (with white border) and give it a text "Übernehmen"
click court name to get into change court dialog (show button in editmode)
scoresheet: show loading dialog
scoresheet: deal and notify failures of loading SVG
unify scoresheet and eventsheet downloading
display mode: until match start show preview (Refrath gegen ...)
make reload button a normal button
test badminton umpire scorekeeper? / support its web interface?
add option no court; prevent transferring (big fat message though!)
remove all references of state in favor of passing in state
	simply remove state from lint
test red card after disqualification
consider reason for injury / retired
check for all disabled settings and use utils.disabled_qsa
show part of scoresheet below? [optionally]
check for instances of {replace} when calling s._
netstats: use Resource Timing API to distinguish server time and network time
compile i18n keys into an array (save mapping in JSON)
alternative toss: ask what happened
send export: show status / finished
replace document.querySelector with utils.qs
export: include timestamp/date of export
import: restrict file types
import: gracefully handle invalid input files, put out a warning
rename teamtext_internal to teamtext
stats: + most consecutive points
stats: + game points
stats: + match points
switch network.ui_list_event for network.subscribe
remove all mentions of home/away
anroid chrome address bar background color
remove one of network.calc_gamescore and calc.calc_game_score?
improve yellow-card.svg / red-card.svg
replace state.match.max_games by a function
allow challenges
	failsafe (http://www.badmintoncentral.com/forums/showthread.php/160170-sub-standard-umpire-gave-a-free-point-to-Okuhara-in-first-set?p=2413636#post2413636)
CourtSpot: Spielreihenfolge festlegen
remove s.match.max_games in favor of a calc function
remove !important
add a test that all public functions are in use
write a test to find undocumented (div/data_structures.md) keys
move eventsheet._xlsx into separate module
reduce common occurences of a single string with dots in it (automatically?) Example: uiu.create_el
editevent: check ranking
doc about all main features (HTML table, compare with other projects)
upload to turnier.de?
rework settings.show => split stuff into ui_init
i18n: use uiu instead of $
UI (& refmode) in konqueror
refmode: screenshot
replace msg with message everywhere (msg: msg. msg=)
selectevent: filter by date and GPS position
replace visible_qs(.*, false) -> hide_qs($1)
all displaymode settings as d_ (also set the alternative options via refmode for a while)
event analysis: which presses before undo
remove calls to prompt and alert
