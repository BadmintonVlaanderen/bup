'use strict';

var assert = require('assert');
var tutils = require('./tutils');
var _describe = tutils._describe;
var _it = tutils._it;
var bup = tutils.bup;


_describe('helper functions', function() {
	_it('abbrevs', function() {
		assert.deepStrictEqual(
			bup.extradata.abbrevs({}),
			['', '']
		);
		assert.deepStrictEqual(
			bup.extradata.abbrevs({
				team_abbrevs: ['T1', 'T2'],
			}),
			['T1', 'T2']
		);

		// built-in
		assert.deepStrictEqual(
			bup.extradata.abbrevs({
				team_names: ['SC Union Lüdinghausen', 'TV Refrath'],
			}),
			['SCU', 'TVR']
		);
		assert.deepStrictEqual(
			bup.extradata.abbrevs({
				team_names: ['1.BV Mülheim', 'BC Hohenlimburg'],
			}),
			['BVM', 'BCH']
		);
		assert.deepStrictEqual(
			bup.extradata.abbrevs({
				team_names: ['STC Blau-Weiss Solingen', 'SG Ddorf-Unterrath'],
			}),
			['STC', 'SGU']
		);
		assert.deepStrictEqual(
			bup.extradata.abbrevs({
				team_names: ['BV Mülheim 2', 'TV Refrath 2'],
			}),
			['BVM', 'TVR']
		);

		// autogenerated
		assert.deepStrictEqual(
			bup.extradata.abbrevs({
				team_names: ['TSV Neuhausen-Nymphenburg', 'BC Bischmisheim'],
			}),
			['NEU', 'BIS']
		);
		assert.deepStrictEqual(
			bup.extradata.abbrevs({
				team_names: ['TSV Trittau', '1.BC Beuel'],
			}),
			['TRI', 'BEU']
		);
	});

	_it('color', function() {
		assert(!bup.extradata.get_color('FoOBAR'));
		assert(bup.extradata.get_color('BC Bischmisheim 2'));
		assert(bup.extradata.get_color('1. BC Sbr.-Bischmisheim 1'));
		assert(bup.extradata.get_color('TV Refrath 2'));
		assert(bup.extradata.get_color('1.BC Beuel 2'));
	});
});
